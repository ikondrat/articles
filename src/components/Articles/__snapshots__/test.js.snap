// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Articles
    isFetching={true}
    title="test title"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Bar
          onChange={[Function]}
/>,
        <WithStyles(Divider) />,
        undefined,
        <Unknown />,
        <WithStyles(Divider) />,
        false,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "onChange": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      undefined,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      false,
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Bar
            onChange={[Function]}
/>,
          <WithStyles(Divider) />,
          undefined,
          <Unknown />,
          <WithStyles(Divider) />,
          false,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "onChange": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        undefined,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        false,
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`renders correctly with list 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Articles
    fetchArticles={[Function]}
    fetchMore={[Function]}
    isFetching={false}
    list={
        Array [
            Object {
              "objectID": "123",
              "title": "Title1",
            },
            Object {
              "objectID": "124",
              "title": "Title2",
            },
          ]
    }
    page={0}
    pages={10}
    title="test title"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Bar
          onChange={[Function]}
/>,
        <WithStyles(Divider) />,
        <WithStyles(List)
          component="nav"
>
          <WithStyles(ListItem)
                    button={true}
          >
                    <Link
                              replace={false}
                              to="/articles/123"
                    >
                              Title1
                    </Link>
          </WithStyles(ListItem)>
          <WithStyles(ListItem)
                    button={true}
          >
                    <Link
                              replace={false}
                              to="/articles/124"
                    >
                              Title2
                    </Link>
          </WithStyles(ListItem)>
</WithStyles(List)>,
        false,
        <WithStyles(Divider) />,
        <Pager
          onClickMore={[Function]}
          page={0}
          pages={10}
/>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "onChange": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <WithStyles(ListItem)
              button={true}
>
              <Link
                            replace={false}
                            to="/articles/123"
              >
                            Title1
              </Link>
</WithStyles(ListItem)>,
            <WithStyles(ListItem)
              button={true}
>
              <Link
                            replace={false}
                            to="/articles/124"
              >
                            Title2
              </Link>
</WithStyles(ListItem)>,
          ],
          "component": "nav",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "0",
            "nodeType": "class",
            "props": Object {
              "button": true,
              "children": <Link
                replace={false}
                to="/articles/123"
>
                Title1
</Link>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Title1",
                "replace": false,
                "to": "/articles/123",
              },
              "ref": null,
              "rendered": "Title1",
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "1",
            "nodeType": "class",
            "props": Object {
              "button": true,
              "children": <Link
                replace={false}
                to="/articles/124"
>
                Title2
</Link>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Title2",
                "replace": false,
                "to": "/articles/124",
              },
              "ref": null,
              "rendered": "Title2",
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      false,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "onClickMore": [Function],
          "page": 0,
          "pages": 10,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Bar
            onChange={[Function]}
/>,
          <WithStyles(Divider) />,
          <WithStyles(List)
            component="nav"
>
            <WithStyles(ListItem)
                        button={true}
            >
                        <Link
                                    replace={false}
                                    to="/articles/123"
                        >
                                    Title1
                        </Link>
            </WithStyles(ListItem)>
            <WithStyles(ListItem)
                        button={true}
            >
                        <Link
                                    replace={false}
                                    to="/articles/124"
                        >
                                    Title2
                        </Link>
            </WithStyles(ListItem)>
</WithStyles(List)>,
          false,
          <WithStyles(Divider) />,
          <Pager
            onClickMore={[Function]}
            page={0}
            pages={10}
/>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "onChange": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <WithStyles(ListItem)
                button={true}
>
                <Link
                                replace={false}
                                to="/articles/123"
                >
                                Title1
                </Link>
</WithStyles(ListItem)>,
              <WithStyles(ListItem)
                button={true}
>
                <Link
                                replace={false}
                                to="/articles/124"
                >
                                Title2
                </Link>
</WithStyles(ListItem)>,
            ],
            "component": "nav",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "0",
              "nodeType": "class",
              "props": Object {
                "button": true,
                "children": <Link
                  replace={false}
                  to="/articles/123"
>
                  Title1
</Link>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Title1",
                  "replace": false,
                  "to": "/articles/123",
                },
                "ref": null,
                "rendered": "Title1",
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "1",
              "nodeType": "class",
              "props": Object {
                "button": true,
                "children": <Link
                  replace={false}
                  to="/articles/124"
>
                  Title2
</Link>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Title2",
                  "replace": false,
                  "to": "/articles/124",
                },
                "ref": null,
                "rendered": "Title2",
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        false,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "onClickMore": [Function],
            "page": 0,
            "pages": 10,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
